{{- if .Values.monitoring.enabled }}
{{- if .Values.monitoring.prometheus.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-prometheus-config
  namespace: {{ .Values.monitoring.namespace }}
data:
  prometheus.yml: |
    global:
      scrape_interval: {{ .Values.monitoring.prometheus.scrapeInterval }}
      evaluation_interval: {{ .Values.monitoring.prometheus.evaluationInterval }}

    scrape_configs:
      - job_name: 'flask-app'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
            action: keep
            regex: flask-app
          - source_labels: [__meta_kubernetes_pod_container_port_number]
            action: keep
            regex: 5000

      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-prometheus
  namespace: {{ .Values.monitoring.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: "prom/prometheus:v{{ .Values.monitoring.prometheus.version }}"
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--storage.tsdb.retention.time={{ .Values.monitoring.prometheus.retention }}"
          ports:
            - containerPort: 9090
          resources:
            {{- toYaml .Values.monitoring.prometheus.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
            - name: storage
              mountPath: /prometheus
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-prometheus-config
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-prometheus-storage

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-prometheus-storage
  namespace: {{ .Values.monitoring.namespace }}
  labels:
    app: prometheus
spec:
  storageClassName: {{ .Release.Name }}-monitoring-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.monitoring.prometheus.persistentVolume.size }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-prometheus
  namespace: {{ .Values.monitoring.namespace }}
spec:
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
{{- end }}
{{- end }} 